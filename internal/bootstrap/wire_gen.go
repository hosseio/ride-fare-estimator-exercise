// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package bootstrap

import (
	"context"
	"github.com/chiguirez/cromberbus/v2"
	"github.com/google/wire"
	"github.com/hosseio/ride-fare-estimator-exercise/internal/creator"
	"github.com/hosseio/ride-fare-estimator-exercise/internal/reader"
	"github.com/hosseio/ride-fare-estimator-exercise/internal/storage"
	"github.com/hosseio/ride-fare-estimator-exercise/io"
)

// Injectors from wire.go:

func initCSVReader(ctx context.Context, cfg Config) (io.CSVReader, error) {
	ioDemuxer := getDemuxer(ctx, cfg)
	csvFilepath := getCSVFilepath(cfg)
	csvReader := io.NewCSVReader(ioDemuxer, csvFilepath)
	return csvReader, nil
}

func initController(ctx context.Context, cfg Config) (io.Controller, error) {
	ioDemuxer := getDemuxer(ctx, cfg)
	inMemory := getInMemoryStorage()
	createPositionCommandHandler := creator.NewCreatePositionCommandHandler(inMemory)
	commandBus, err := getBus(createPositionCommandHandler)
	if err != nil {
		return io.Controller{}, err
	}
	controller := io.NewController(ioDemuxer, commandBus)
	return controller, nil
}

func initCSVWriter(ctx context.Context, cfg Config) (io.CSVWriter, error) {
	inMemory := getInMemoryStorage()
	fareRetriever := reader.NewFareRetriever(inMemory)
	csvOutFilepath := getCSVOutputFilepath(cfg)
	csvWriter := io.NewCSVWriter(fareRetriever, csvOutFilepath)
	return csvWriter, nil
}

// wire.go:

var creatorSet = wire.NewSet(creator.NewCreatePositionCommandHandler)

var storageSet = wire.NewSet(
	getInMemoryStorage,
)

var inMemStorage *storage.InMemory

func getInMemoryStorage() *storage.InMemory {
	if inMemStorage != nil {
		return inMemStorage
	}

	inMemStorage = storage.NewInMemory()

	return inMemStorage
}

var ioSet = wire.NewSet(io.NewController, io.NewCSVReader, getDemuxer,
	getCSVFilepath, io.NewCSVWriter, getCSVOutputFilepath,
)

var readerSet = wire.NewSet(reader.NewFareRetriever)

var demuxer *io.Demuxer

func getDemuxer(ctx context.Context, cfg Config) *io.Demuxer {
	if demuxer != nil {
		return demuxer
	}

	demuxer = io.NewDemuxer()

	return demuxer
}

func getCSVFilepath(cfg Config) io.CSVFilepath {
	return io.CSVFilepath(cfg.CSV.InputFilepath)
}

func getCSVOutputFilepath(cfg Config) io.CSVOutFilepath {
	return io.CSVOutFilepath(cfg.CSV.OutputFilepath)
}

var bus cromberbus.CommandBus

func getBus(creator2 creator.CreatePositionCommandHandler) (cromberbus.CommandBus, error) {
	if bus != nil {
		return bus, nil
	}
	handlerResolver := cromberbus.NewMapHandlerResolver()
	handlerResolver.AddHandler(creator2.Handle)

	bus = cromberbus.NewCromberBus(handlerResolver)

	return bus, nil
}
